name: Build

on:
  push:
    branches:
      - main
      - dev
      - QuanTuanHuy/dev

env:
  DOCKER_REGISTRY: ${{ secrets.DOCKER_USERNAME }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      account: ${{ steps.changes.outputs.account }}
      api-gateway: ${{ steps.changes.outputs.api-gateway }}
      ptm-task: ${{ steps.changes.outputs.ptm-task }}
      ptm-schedule: ${{ steps.changes.outputs.ptm-schedule }}
      ptm-optimization: ${{ steps.changes.outputs.ptm-optimization }}
      serp-web: ${{ steps.changes.outputs.serp-web }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            account:
              - 'account/**'
            api-gateway:
              - 'api_gateway/**'
            ptm-task:
              - 'ptm_task/**'
            ptm-schedule:
              - 'ptm_schedule/**'
            ptm-optimization:
              - 'ptm_optimization/**'
            serp-web:
              - 'serp_web/**'

  build-account:
    needs: changes
    if: ${{ needs.changes.outputs.account == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"

      - name: Build Account Service
        run: |
          cd account
          chmod +x ./mvnw
          ./mvnw clean package -DskipTests

  build-api-gateway:
    needs: changes
    if: ${{ needs.changes.outputs.api-gateway == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.3"

      - name: Build API Gateway
        run: |
          cd api_gateway
          go mod download
          go test ./...
          go build -o main ./src

  build-ptm-task:
    needs: changes
    if: ${{ needs.changes.outputs.ptm-task == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.25.0"

      - name: Build PTM Task
        run: |
          cd ptm_task
          go mod download
          go test ./...
          go build -o main ./src

  build-ptm-schedule:
    needs: changes
    if: ${{ needs.changes.outputs.ptm-schedule == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.25.0"

      - name: Build PTM Schedule
        run: |
          cd ptm_schedule
          go mod download
          go test ./...
          go build -o main ./src
          
  build-ptm-optimization:
    needs: changes
    if: ${{ needs.changes.outputs.ptm-optimization == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"

      - name: Build PTM Optimization
        run: |
          cd ptm_optimization
          chmod +x ./mvnw
          ./mvnw clean package -DskipTests


  build-serp-web:
    needs: changes
    if: ${{ needs.changes.outputs.serp-web == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ./serp_web/package-lock.json

      - name: Install dependencies
        run: |
          cd serp_web
          npm ci

      - name: Run ESLint
        run: |
          cd serp_web
          npm run lint

      - name: Run type check
        run: |
          cd serp_web
          npm run type-check

      - name: Build Next.js app
        run: |
          cd serp_web
          npm run build

