spring:
  application:
    name: account
  threads:
    virtual:
      enabled: true

  datasource:
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    url: ${DB_URL}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

app:
  security:
    jwt:
      private-key: ${JWT_PRIVATE_KEY}
      public-key: ${JWT_PUBLIC_KEY}
      access-token-expiration: 604800000
      refresh-token-expiration: 604800000
      header: Authorization
      prefix: Bearer
    filter:
      publicUrls:
        - first: /api/v1/auth/login
          second: POST
        - first: /api/v1/auth/register
          second: POST
        - first: /api/v1/permissions/**
          second: POST
        - first: /api/v1/permissions/**
          second: GET
        - first: /api/v1/roles/**
          second: POST
        - first: /api/v1/roles/**
          second: GET
      protectedUrls:
        - url-pattern: /api/public/v1/users/**
          roles:
            - ADMIN
          permissions:


server:
  port: 8081
  servlet:
    context-path: /account-service